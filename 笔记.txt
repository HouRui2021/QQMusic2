移动端开发：
  @1 NativeApp开发「IOS或安卓开发」
    + IOS：object-c
    + android：java-native
  @2 WebApp开发「H5页面」
    + HTML5/CSS3/JavaScript
    + Vue/Ract
  @3 Hybrid混合App开发
    + NativeApp中嵌套WebApp
    + JSBridge通信技术
  @4 各种小程序开发
    + 原生
    + vue:uni-app
    + react:taro
  ...

============
前端开发者去做移动端，首先要考虑的就是“响应式布局”：让产品适应不同尺寸的设备
  @1 基于@media媒体查询实现响应式开发
    + 适用于PC端和移动端“共用相同的项目”（项目结构、排版、样式等都简单一些），例如：
      https://www.huawei.com/cn/
    + @media的原理：开发多套样式，在不同设备尺寸下，微调整页面排版结构，让元素拥有不同的样式
      一般是先按照PC端进行开发，然后再一点点缩放视口，在指定条件下，调整样式，直到适配常用的手机设备！！
      一般会采用“流式布局”「外层盒子是百分比布局，这样随时视口缩放，盒子也会自动缩放」
      .box{
        font-size:16px;
      }
      @media all and (max-width:960px){
         .box{
           font-size:15px;
         }
      }
      @media all and (max-width:640px){
         .box{
           font-size:14px;
         }
      }
      ...

  @2 PC端是固定布局，移动端有单独的项目，我们只需要考虑移动端设备适配即可！
    有的时候需要适配PAD；有的时候只需要适配手机！！
    方案：REM等比缩放布局

  @3 PC端全屏项目(例如管理系统) 或者 移动端全屏项目
    + 页面排版基于VW/VH百分比布局
    + 字体大小、或者一些图片/图标基于REM等比缩放(或者@media微调)

  ....

============
REM响应式布局原理
  EM是相对于父元素字体大小来设定的
  REM是相对单位，相对于根元素(HTML)的字体大小来设定的
    html{
        font-size:20px; //1rem=20px
    }
  ------
  具体开发的步骤：
  @1 设计师给我们设计稿(一般是750px?)，我们首先定义750尺寸下，REM和PX的换算比例
    html{
        font-size:100px; 
        //750的设备尺寸下：1rem=100px
        //设置为100是方便计算「后期需要把测量的PX转换为REM」
        //浏览器最小字体是12px，我们设置为10，虽然方便我们计算，但是浏览器是按照12计算的，这样结果就不准了！！
    }

  @2 我们按照750的设计搞尺寸进行开发
    我们需要把测量出来的尺寸(PX)，全部转换为REM，例如：
    测出来的尺寸300px*200px，字体28px
    .box{
        width:3rem;
        height:2rem;
        font-size:.28rem;
    }

  @3 最后基于JS获取设备的宽度，通过和750进行比较，动态调增REM和PX的换算比例(HTML的字体大小)，这样之前编写的样式都会等比缩放
    例如：我们在375的设备上预览
      html.fontSize=375/750*100+'px'  => 设备宽度/设计稿宽度*原始比例(100) = 当前设备最新的REM和PX换算比例
    手机端开发，我们一般设置最大宽度（例如：750）；超过这个尺寸(例如在pad中预览)，我们会控制内容区域就是750，水平居中，左右留出空白；同时我们REM换算比例，也要停留在100即可，不要再继续放大了！！

  ------
  为啥设计稿一般都是750px?
    + 参考主流设备的尺寸(375px)来设计的
    + 主要是考虑图片的DPR适配「二倍屏、三倍屏...」